apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  requirements:
    # # Include general purpose instance families
    # - key: karpenter.k8s.aws/instance-category
    #   operator: In
    #   values: ["c", "m", "r"]
    # - key: karpenter.k8s.aws/instance-generation
    #   operator: Gt
    #   values: ["2"]
    # # Include large instance sizes
    # - key: karpenter.k8s.aws/instance-size
    #   operator: In
    #   values: [large, xlarge, xlarge, 2xlarge]
    # # Exclude instances with < 4 cores 
    # - key: "karpenter.k8s.aws/instance-cpu"
    #   operator: Gt
    #   values: ["3"]
    # # Exclude instances with < 8GiB memory (8192 mebibytes)
    # - key: "karpenter.k8s.aws/instance-memory"
    #   operator: Gt
    #   values: ["8191"]
    - key: kubernetes.io/arch
      operator: In
      values: ["amd64"]
    - key: kubernetes.io/os
      operator: In
      values: ["linux"]
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot"]  # ["spot", "on-demand"]
    - key: topology.kubernetes.io/zone
      operator: In
      values: ["eu-west-2a"]
  # ttlSecondsUntilExpired: 604800 # expire nodes after 7 days (in seconds) = 7 * 60 * 60 * 24
  # ttlSecondsAfterEmpty: 60 # scale down nodes after 60 seconds without workloads (excluding daemons)
  providerRef:
    name: default
  limits:
    resources:
      cpu: 64
      memory: 256Gi
  consolidation:
    enabled: true
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  subnetSelector:
    karpenter.sh/discovery: {{radar_base_eks_cluster_name}}
  securityGroupSelector:
    karpenter.sh/discovery: {{radar_base_eks_cluster_name}}
